<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 静态资源 -->
	<mvc:resources location="/WEB-INF/jsp/css/" mapping="/css/**" />
    <mvc:resources location="/WEB-INF/jsp/fonts/" mapping="/fonts/**" />
    <mvc:resources location="/WEB-INF/jsp/images/" mapping="/images/**" />
    <mvc:resources location="/WEB-INF/jsp/js/" mapping="/js/**"/>
    
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 设置上传文件的最大尺寸位30M，-1表示无限大 -->
		<property name="maxUploadSize" value="31457280" />
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 是否延迟加载，在需要的时候才进行上传文件的解析 -->
		<property name="resolveLazily" value="true" />

	</bean>

	<!-- 指定让Spring的DispatcherServlet作为默认Servlet，这样我们就可以让Spring处理根路径/的请求了。 如果不加这个，那么根路径的请求默认会由服务器来处理。 -->
	<mvc:default-servlet-handler />

	<!-- 启用MVC的注解支持。如果不添加这个，那么我们就需要在XML文件中为每个控制器写一个Bean配置 -->
	<mvc:annotation-driven />

	<!-- 用来扫描指定的路径下的包，告诉Spring从哪里搜索注解来加载组件用的 -->
	<!-- 把标记了@Controller注解的类转换为bean -->
	<!-- 4.扫描web相关的bean配置 -->
	<context:component-scan base-package="com.meng.web">
		<!-- 制定扫包规则 ,只扫描使用@Controller注解的JAVA类 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
</beans>